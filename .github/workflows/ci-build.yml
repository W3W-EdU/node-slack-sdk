name: Node.js

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]
        package:
          - cli-hooks
          - cli-test
          - logger
          - oauth
          - rtm-api
          - socket-mode
          - types
          - web-api
          - webhook
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm --version
      - name: Build and Run Tests in Each Package
        working-directory: packages/${{ matrix.package }}
        run: |
          npm install
          # depending on which package we are testing, also npm link up other dependent packages
          case "$PWD" in
            */webhook) pushd ../types && npm i && popd && npm link ../types;;
            */web-api) pushd ../types && npm i && popd && npm link ../types && pushd ../logger && npm i && popd && npm link ../logger;;
            */oauth) pushd ../logger && npm i && popd && npm link ../logger && pushd ../web-api && npm i && popd && npm link ../web-api;;
            */socket-mode) pushd ../logger && npm i && popd && npm link ../logger && pushd ../web-api && npm i && popd && npm link ../web-api;;
            *) ;; # default
          esac
          npm test
      - name: Check for coverage report existence
        id: check_coverage
        uses: andstor/file-existence-action@v3
        with:
          files: packages/${{ matrix.package }}/coverage/lcov.info
      - name: Upload code coverage
        if: matrix.node-version == '22.x' && steps.check_coverage.outputs.files_exists == 'true'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: packages/${{ matrix.package }}/coverage
          flags: ${{ matrix.package }}
          verbose: true
  # integrates the packages from this repository that bolt-js relies on, to ensure bolt-js tests pass with incoming changes to these packages
  bolt-integration:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Checkout node-slack-sdk
        uses: actions/checkout@v4
        with:
          path: ./node-slack-sdk
      - name: Install and link @slack/logger
        working-directory: ./node-slack-sdk/packages/logger
        run: npm i && npm link .
      - name: Install and link @slack/oauth
        working-directory: ./node-slack-sdk/packages/oauth
        run: npm i && npm link .
      - name: Install and link @slack/socket-mode
        working-directory: ./node-slack-sdk/packages/socket-mode
        run: npm i && npm link .
      - name: Install and link @slack/types
        working-directory: ./node-slack-sdk/packages/types
        run: npm i && npm link .
      - name: Install and link @slack/web-api
        working-directory: ./node-slack-sdk/packages/web-api
        run: npm i && npm link .
      - name: Checkout bolt-js
        uses: actions/checkout@v4
        with:
          repository: slackapi/bolt-js
          path: ./bolt-js
      - name: Link dependent packages
        working-directory: ./bolt-js
        run: npm i && npm link @slack/logger && npm link @slack/oauth && npm link @slack/socket-mode && npm link @slack/types && npm link @slack/web-api
      - name: Run bolt-js tests
        working-directory: ./bolt-js
        run: npm test
